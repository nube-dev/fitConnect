{"version":3,"file":"index.js","sources":["../src/comparators.tsx","../src/domIOSystem.ts","../src/propsReadySystem.ts","../src/stateFlagsSystem.ts","../src/scrollSeekSystem.ts","../src/AATree.ts","../src/utils/binaryArraySearch.ts","../src/utils/correctItemSize.ts","../src/sizeSystem.ts","../src/scrollToIndexSystem.ts","../src/sizeRangeSystem.ts","../src/windowScrollerSystem.ts","../src/gridSystem.ts","../src/hooks/useSize.ts","../src/hooks/useWindowViewportRect.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/hooks/useScrollTop.ts","../src/initialTopMostItemIndexSystem.ts","../src/followOutputSystem.ts","../src/groupedListSystem.ts","../src/listStateSystem.ts","../src/utils/simpleMemoize.ts","../src/initialItemCountSystem.ts","../src/topItemCountSystem.ts","../src/totalListHeightSystem.ts","../src/upwardScrollFixSystem.ts","../src/initialScrollTopSystem.ts","../src/alignToBottomSystem.ts","../src/listSystem.ts","../src/utils/positionStickyCssValue.ts","../src/List.tsx","../src/hooks/useChangedChildSizes.ts","../src/Grid.tsx","../src/components.tsx"],"sourcesContent":["import { ListRange } from './interfaces'\n\nexport function tupleComparator(prev: [any, any] | undefined, current: [any, any]) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1])\n}\n\nexport function rangeComparator(prev: ListRange | undefined, next: ListRange) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex)\n}\n","import * as u from '@virtuoso.dev/urx'\n\nexport const UP = 'up' as const\nexport const DOWN = 'down' as const\nexport type ScrollDirection = typeof UP | typeof DOWN\n\nexport const domIOSystem = u.system(\n  () => {\n    const scrollTop = u.stream<number>()\n    const deviation = u.statefulStream(0)\n    const smoothScrollTargetReached = u.stream<true>()\n    const statefulScrollTop = u.statefulStream(0)\n    const viewportHeight = u.stream<number>()\n    const headerHeight = u.statefulStream(0)\n    const footerHeight = u.statefulStream(0)\n    const scrollTo = u.stream<ScrollToOptions>()\n    const scrollBy = u.stream<ScrollToOptions>()\n    const scrollingInProgress = u.statefulStream(false)\n\n    u.connect(scrollTop, statefulScrollTop)\n    const scrollDirection = u.statefulStream<ScrollDirection>(DOWN)\n\n    u.connect(\n      u.pipe(\n        scrollTop,\n        u.scan(\n          (acc, scrollTop) => {\n            return { direction: scrollTop < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop }\n          },\n          { direction: DOWN, prevScrollTop: 0 } as { direction: ScrollDirection; prevScrollTop: number }\n        ),\n        u.map((value) => value.direction)\n      ),\n      scrollDirection\n    )\n\n    return {\n      // input\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      footerHeight,\n      smoothScrollTargetReached,\n\n      // signals\n      scrollTo,\n      scrollBy,\n\n      // state\n      scrollDirection,\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\n\nexport const propsReadySystem = u.system(\n  () => {\n    const propsReady = u.statefulStream(false)\n\n    const didMount = u.streamFromEmitter(\n      u.pipe(\n        propsReady,\n        u.filter((ready) => ready),\n        u.distinctUntilChanged()\n      )\n    )\n\n    return { propsReady, didMount }\n  },\n  [],\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\n\nexport interface ListBottomInfo {\n  bottom: number\n  offsetBottom: number\n}\n\nexport interface AtBottomParams {\n  offsetBottom: number\n  scrollTop: number\n  viewportHeight: number\n  totalHeight: number\n}\n\nexport type NotAtBottomReason =\n  | 'SIZE_INCREASED'\n  | 'NOT_SHOWING_LAST_ITEM'\n  | 'VIEWPORT_HEIGHT_DECREASING'\n  | 'SCROLLING_UPWARDS'\n  | 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n\nexport type AtBottomState =\n  | {\n      atBottom: false\n      notAtBottomBecause: NotAtBottomReason\n      state: AtBottomParams\n    }\n  | {\n      atBottom: true\n      state: AtBottomParams\n    }\n\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: 'NOT_SHOWING_LAST_ITEM',\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    totalHeight: 0,\n  },\n} as AtBottomState\n\nexport const stateFlagsSystem = u.system(([{ scrollTop, viewportHeight }]) => {\n  const isAtBottom = u.statefulStream(false)\n  const isAtTop = u.statefulStream(true)\n  const atBottomStateChange = u.stream<boolean>()\n  const atTopStateChange = u.stream<boolean>()\n  const listStateListener = u.stream<ListBottomInfo>()\n\n  // skip 1 to avoid an initial on/off flick\n  const isScrolling = u.streamFromEmitter(\n    u.pipe(\n      u.merge(u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(true)), u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(false), u.debounceTime(100))),\n      u.distinctUntilChanged()\n    )\n  )\n\n  u.connect(\n    u.pipe(\n      u.duc(scrollTop),\n      u.map((top) => top === 0),\n      u.distinctUntilChanged()\n    ),\n    isAtTop\n  )\n\n  u.connect(isAtTop, atTopStateChange)\n\n  const atBottomState = u.streamFromEmitter(\n    u.pipe(\n      u.combineLatest(listStateListener, u.duc(scrollTop), u.duc(viewportHeight)),\n      u.scan((current, [{ bottom, offsetBottom }, scrollTop, viewportHeight]) => {\n        const isAtBottom = offsetBottom === 0 && scrollTop + viewportHeight - bottom > -4\n        const state = {\n          viewportHeight,\n          scrollTop,\n          offsetBottom,\n          totalHeight: bottom + offsetBottom,\n        }\n\n        if (isAtBottom) {\n          return {\n            atBottom: true,\n            state,\n          } as AtBottomState\n        }\n\n        let notAtBottomBecause: NotAtBottomReason\n\n        if (state.totalHeight > current.state.totalHeight) {\n          notAtBottomBecause = 'SIZE_INCREASED'\n        } else if (offsetBottom !== 0) {\n          notAtBottomBecause = 'NOT_SHOWING_LAST_ITEM'\n        } else if (viewportHeight < current.state.viewportHeight) {\n          notAtBottomBecause = 'VIEWPORT_HEIGHT_DECREASING'\n        } else if (scrollTop < current.state.scrollTop) {\n          notAtBottomBecause = 'SCROLLING_UPWARDS'\n        } else {\n          notAtBottomBecause = 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n        }\n\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state,\n        } as AtBottomState\n      }, INITIAL_BOTTOM_STATE),\n      u.distinctUntilChanged((prev, next) => {\n        // prev && console.log(prev.atBottom, next.atBottom)\n        return prev && prev.atBottom === next.atBottom\n      })\n    )\n  )\n\n  u.connect(\n    u.pipe(\n      atBottomState,\n      u.map((state) => state.atBottom)\n    ),\n    isAtBottom\n  )\n\n  u.subscribe(isAtBottom, (value) => {\n    setTimeout(() => u.publish(atBottomStateChange, value))\n  })\n\n  // connect(isAtBottom, atBottomStateChange)\n\n  return { isScrolling, isAtTop, isAtBottom, atBottomState, atTopStateChange, atBottomStateChange, listStateListener }\n}, u.tup(domIOSystem))\n","import {\n  combineLatest,\n  connect,\n  distinctUntilChanged,\n  filter,\n  map,\n  mapTo,\n  pipe,\n  scan,\n  statefulStream,\n  stream,\n  subscribe,\n  system,\n  throttleTime,\n  tup,\n  withLatestFrom,\n} from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { ListRange } from './interfaces'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { ScrollSeekConfiguration } from './interfaces'\n\nexport const scrollSeekSystem = system(\n  ([{ scrollTop }, { isScrolling }]) => {\n    const scrollVelocity = statefulStream(0)\n    const isSeeking = statefulStream(false)\n    const rangeChanged = stream<ListRange>()\n    const scrollSeekConfiguration = statefulStream<ScrollSeekConfiguration | undefined | false>(false)\n\n    connect(\n      pipe(\n        isScrolling,\n        filter((value) => !value),\n        mapTo(0)\n      ),\n      scrollVelocity\n    )\n\n    connect(\n      pipe(\n        scrollTop,\n        throttleTime(100),\n        withLatestFrom(isScrolling),\n        filter(([_, isScrolling]) => !!isScrolling),\n        scan(([_, prev], [next]) => [prev, next], [0, 0]),\n        map(([prev, next]) => next - prev)\n      ),\n      scrollVelocity\n    )\n\n    connect(\n      pipe(\n        scrollVelocity,\n        withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        filter(([_, config]) => !!config),\n        map(([speed, config, isSeeking, range]) => {\n          const { exit, enter } = config as ScrollSeekConfiguration\n          if (isSeeking) {\n            if (exit(speed, range)) {\n              return false\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true\n            }\n          }\n          return isSeeking\n        }),\n        distinctUntilChanged()\n      ),\n      isSeeking\n    )\n\n    subscribe(\n      pipe(combineLatest(isSeeking, scrollVelocity, rangeChanged), withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking, velocity, range], config]) => isSeeking && config && config.change && config.change(velocity, range)\n    )\n\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged }\n  },\n  tup(domIOSystem, stateFlagsSystem),\n  { singleton: true }\n)\n","interface NilNode {\n  lvl: 0\n}\n\nconst NIL_NODE: NilNode = { lvl: 0 }\n\ninterface NodeData<T> {\n  k: number\n  v: T\n}\n\ninterface NonNilAANode<T> {\n  k: number\n  v: T\n  lvl: number\n  l: NonNilAANode<T> | NilNode\n  r: NonNilAANode<T> | NilNode\n}\n\nexport interface Range<T> {\n  start: number\n  end: number\n  value: T\n}\n\nexport type AANode<T> = NilNode | NonNilAANode<T>\n\nfunction newAANode<T>(k: number, v: T, lvl: number, l: AANode<T> = NIL_NODE, r: AANode<T> = NIL_NODE): NonNilAANode<T> {\n  return { k, v, lvl, l, r }\n}\n\nexport function empty(node: AANode<any>): node is NilNode {\n  return node === NIL_NODE\n}\n\nexport function newTree<T>(): AANode<T> {\n  return NIL_NODE\n}\n\nexport function remove<T>(node: AANode<T>, key: number): AANode<T> {\n  if (empty(node)) return NIL_NODE\n\n  const { k, l, r } = node\n\n  if (key === k) {\n    if (empty(l)) {\n      return r\n    } else if (empty(r)) {\n      return l\n    } else {\n      const [lastKey, lastValue] = last(l)\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }))\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }))\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }))\n  }\n}\n\nexport function find<T>(node: AANode<T>, key: number): T | undefined {\n  if (empty(node)) {\n    return\n  }\n\n  if (key === node.k) {\n    return node.v\n  } else if (key < node.k) {\n    return find(node.l, key)\n  } else {\n    return find(node.r, key)\n  }\n}\n\nexport function findMaxKeyValue<T>(node: AANode<T>, value: number, field: 'k' | 'v' = 'k'): [number, T | undefined] {\n  if (empty(node)) {\n    return [-Infinity, undefined]\n  }\n\n  if (node[field] === value) {\n    return [node.k, node.v]\n  }\n\n  if (node[field] < value) {\n    const r = findMaxKeyValue(node.r, value, field)\n    if (r[0] === -Infinity) {\n      return [node.k, node.v]\n    } else {\n      return r\n    }\n  }\n\n  return findMaxKeyValue(node.l, value, field)\n}\n\nexport function insert<T>(node: AANode<T>, k: number, v: T): NonNilAANode<T> {\n  if (empty(node)) {\n    return newAANode(k, v, 1)\n  }\n  if (k === node.k) {\n    return clone(node, { k, v })\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }))\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }))\n  }\n}\n\nexport function walkWithin<T>(node: AANode<T>, start: number, end: number): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  const { k, v, l, r } = node\n  let result: NodeData<T>[] = []\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end))\n  }\n\n  if (k >= start && k <= end) {\n    result.push({ k, v })\n  }\n\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end))\n  }\n\n  return result\n}\n\nexport function walk<T>(node: AANode<T>): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)]\n}\n\nfunction last<T>(node: NonNilAANode<T>): [number, T] {\n  return empty(node.r) ? [node.k, node.v] : last(node.r)\n}\n\nfunction deleteLast<T>(node: NonNilAANode<T>): AANode<T> {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }))\n}\n\nfunction clone<T>(node: NonNilAANode<T>, args: Partial<NonNilAANode<T>>): NonNilAANode<T> {\n  return newAANode(\n    args.k !== undefined ? args.k : node.k,\n    args.v !== undefined ? args.v : node.v,\n    args.lvl !== undefined ? args.lvl : node.lvl,\n    args.l !== undefined ? args.l : node.l,\n    args.r !== undefined ? args.r : node.r\n  )\n}\n\nfunction isSingle(node: AANode<any>) {\n  return empty(node) || node.lvl > node.r.lvl\n}\n\nfunction rebalance<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  return split(skew(node))\n}\n\nfunction adjust<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l, r, lvl } = node\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1,\n          }),\n          lvl: lvl,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl\n\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1,\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  }\n}\n\nexport function keys(node: AANode<any>): number[] {\n  if (empty(node)) {\n    return []\n  }\n  return [...keys(node.l), node.k, ...keys(node.r)]\n}\n\nexport function ranges<T>(node: AANode<T>): Range<T>[] {\n  return toRanges(walk(node))\n}\n\nexport function rangesWithin<T>(node: AANode<T>, startIndex: number, endIndex: number): Range<T>[] {\n  if (empty(node)) {\n    return []\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0]\n  return toRanges(walkWithin(node, adjustedStart, endIndex))\n}\n\nexport function arrayToRanges<T, V>(\n  items: T[],\n  parser: (item: T) => { index: number; value: V }\n): Array<{ start: number; end: number; value: V }> {\n  const length = items.length\n  if (length === 0) {\n    return []\n  }\n\n  let { index: start, value } = parser(items[0])\n\n  const result = []\n\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i])\n    result.push({ start, end: nextIndex - 1, value })\n\n    start = nextIndex\n    value = nextValue\n  }\n\n  result.push({ start, end: Infinity, value })\n  return result\n}\n\nfunction toRanges<T>(nodes: NodeData<T>[]): Range<T>[] {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }))\n}\n\nfunction split<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { r, lvl } = node\n\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node\n}\n\nfunction skew<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l } = node\n\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node\n}\n","export type Comparator<T> = {\n  (item: T, value: number): -1 | 0 | 1\n}\n\nexport function findIndexOfClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>, start = 0): number {\n  let end = items.length - 1\n\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2)\n    const item = items[index]\n    const match = comparator(item, value)\n    if (match === 0) {\n      return index\n    }\n\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1\n      }\n      end = index - 1\n    } else {\n      if (end === start) {\n        return index\n      }\n      start = index + 1\n    }\n  }\n\n  throw new Error(`Failed binary finding record in array - ${items.join(',')}, searched for ${value}`)\n}\n\nexport function findClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>): T {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)]\n}\n\nexport function findRange<T>(items: T[], startValue: number, endValue: number, comparator: Comparator<T>): T[] {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator)\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex)\n  return items.slice(startIndex, endIndex + 1)\n}\n","export function correctItemSize(el: HTMLElement, dimension: 'height' | 'width') {\n  return el.getBoundingClientRect()[dimension]\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { arrayToRanges, AANode, empty, findMaxKeyValue, insert, newTree, Range, rangesWithin, remove, walk } from './AATree'\nimport * as arrayBinarySearch from './utils/binaryArraySearch'\nimport { correctItemSize } from './utils/correctItemSize'\n\nexport interface SizeRange {\n  startIndex: number\n  endIndex: number\n  size: number\n}\n\nexport type Data = readonly unknown[] | undefined\n\nfunction rangeIncludes(refRange: SizeRange) {\n  const { size, startIndex, endIndex } = refRange\n  return (range: Range<number>) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size\n  }\n}\n\nexport function insertRanges(sizeTree: AANode<number>, ranges: SizeRange[]) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity\n\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range\n    syncStart = Math.min(syncStart, startIndex)\n\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size)\n      continue\n    }\n\n    // extend the range in both directions, so that we can get adjacent neighbours.\n    // if the previous / next ones have the same value as the one we are about to insert,\n    // we 'merge' them.\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1)\n\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue\n    }\n\n    let firstPassDone = false\n    let shouldInsert = false\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      // previous range\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size\n        firstPassDone = true\n      } else {\n        // remove the range if it starts within the new range OR if\n        // it has the same value as it, in order to perform a merge\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart)\n        }\n      }\n\n      // next range\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue)\n        }\n      }\n    }\n\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size)\n    }\n  }\n  return [sizeTree, syncStart] as const\n}\n\nexport interface OffsetPoint {\n  offset: number\n  size: number\n  index: number\n}\n\nexport interface SizeState {\n  sizeTree: AANode<number>\n  offsetTree: Array<OffsetPoint>\n  groupOffsetTree: AANode<number>\n  lastIndex: number\n  lastOffset: number\n  lastSize: number\n  groupIndices: number[]\n}\n\nexport function initialSizeState(): SizeState {\n  return {\n    offsetTree: [],\n    sizeTree: newTree<number>(),\n    groupOffsetTree: newTree<number>(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: [],\n  }\n}\n\nexport function indexComparator({ index: itemIndex }: OffsetPoint, index: number) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1\n}\n\nexport function offsetComparator({ offset: itemOffset }: OffsetPoint, offset: number) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1\n}\n\nfunction offsetPointParser(point: OffsetPoint) {\n  return { index: point.index, value: point }\n}\n\nexport function rangesWithinOffsets(\n  tree: Array<OffsetPoint>,\n  startOffset: number,\n  endOffset: number,\n  minStartIndex = 0\n): Array<{\n  start: number\n  end: number\n  value: {\n    size: number\n    offset: number\n    index: number\n  }\n}> {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, arrayBinarySearch.findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset)\n  }\n\n  return arrayToRanges(arrayBinarySearch.findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser)\n}\n\nexport function sizeStateReducer(state: SizeState, [ranges, groupIndices]: [SizeRange[], number[]]) {\n  const sizeTree = state.sizeTree\n  let offsetTree = state.offsetTree\n  let newSizeTree: AANode<number> = sizeTree\n  let syncStart = 0\n\n  // We receive probe item results from a group probe,\n  // which should always pass an item and a group\n  // the results contain two ranges, which we consider to mean that groups and items have different size\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size\n    const itemSize = ranges[1].size\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize)\n    }, newSizeTree)\n  } else {\n    ;[newSizeTree, syncStart] = insertRanges(newSizeTree, ranges)\n  }\n\n  if (newSizeTree === sizeTree) {\n    return state\n  }\n\n  let prevIndex = 0\n  let prevSize = 0\n\n  let prevAOffset = 0\n  let startAIndex = 0\n\n  if (syncStart !== 0) {\n    startAIndex = arrayBinarySearch.findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator)\n    const offsetInfo = offsetTree[startAIndex]\n    prevAOffset = offsetInfo.offset\n    const kv = findMaxKeyValue(newSizeTree, syncStart - 1)\n    prevIndex = kv[0]\n    prevSize = kv[1]!\n\n    if (offsetTree.length && offsetTree[startAIndex].size === findMaxKeyValue(newSizeTree, syncStart)[1]) {\n      startAIndex -= 1\n    }\n\n    offsetTree = offsetTree.slice(0, startAIndex + 1)\n  } else {\n    offsetTree = []\n  }\n\n  for (const { start: startIndex, value } of rangesWithin(newSizeTree, syncStart, Infinity)) {\n    const aOffset = (startIndex - prevIndex) * prevSize + prevAOffset\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex,\n    })\n    prevIndex = startIndex\n    prevAOffset = aOffset\n    prevSize = value\n  }\n\n  return {\n    sizeTree: newSizeTree,\n    offsetTree,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, offsetTree))\n    }, newTree<number>()),\n    lastIndex: prevIndex,\n    lastOffset: prevAOffset,\n    lastSize: prevSize,\n    groupIndices,\n  }\n}\n\nexport function offsetOf(index: number, tree: Array<OffsetPoint>) {\n  if (tree.length === 0) {\n    return 0\n  }\n\n  const { offset, index: startIndex, size } = arrayBinarySearch.findClosestSmallerOrEqual(tree, index, indexComparator)\n  return size * (index - startIndex) + offset\n}\n\nexport function originalIndexFromItemIndex(itemIndex: number, sizes: SizeState) {\n  if (!hasGroups(sizes)) {\n    return itemIndex\n  }\n\n  let groupOffset = 0\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++\n  }\n  // we find the real item index, offsetting it by the number of group items before it\n  return itemIndex + groupOffset\n}\n\nexport function hasGroups(sizes: SizeState) {\n  return !empty(sizes.groupOffsetTree)\n}\n\ntype OptionalNumber = number | undefined\n\nconst SIZE_MAP = {\n  offsetHeight: 'height',\n  offsetWidth: 'width',\n} as const\n\n/** Calculates the height of `el`, which will be the `Item` element in the DOM. */\nexport type SizeFunction = (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\nexport const sizeSystem = u.system(\n  () => {\n    const sizeRanges = u.stream<SizeRange[]>()\n    const totalCount = u.stream<number>()\n    const unshiftWith = u.stream<number>()\n    const firstItemIndex = u.statefulStream(0)\n    const groupIndices = u.statefulStream([] as number[])\n    const fixedItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const defaultItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const itemSize = u.statefulStream<SizeFunction>((el, field) => correctItemSize(el, SIZE_MAP[field]))\n    const data = u.statefulStream<Data>(undefined)\n    const initial = initialSizeState()\n\n    const sizes = u.statefulStreamFromEmitter(\n      u.pipe(sizeRanges, u.withLatestFrom(groupIndices), u.scan(sizeStateReducer, initial), u.distinctUntilChanged()),\n      initial\n    )\n\n    u.connect(\n      u.pipe(\n        groupIndices,\n        u.filter((indexes) => indexes.length > 0),\n        u.withLatestFrom(sizes),\n        u.map(([groupIndices, sizes]) => {\n          const groupOffsetTree = groupIndices.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes.offsetTree) || idx)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            groupIndices,\n            groupOffsetTree,\n          }\n        })\n      ),\n      sizes\n    )\n\n    // decreasing the total count should remove any existing entries\n    // beyond the last index - do this by publishing the default size as a range over them.\n    u.connect(\n      u.pipe(\n        totalCount,\n        u.withLatestFrom(sizes),\n        u.filter(([totalCount, { lastIndex }]) => {\n          return totalCount < lastIndex\n        }),\n        u.map(([totalCount, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount,\n              endIndex: lastIndex,\n              size: lastSize,\n            },\n          ] as SizeRange[]\n        })\n      ),\n      sizeRanges\n    )\n\n    u.connect(fixedItemSize, defaultItemSize)\n\n    const trackItemSizes = u.statefulStreamFromEmitter(\n      u.pipe(\n        fixedItemSize,\n        u.map((size) => size === undefined)\n      ),\n      true\n    )\n\n    u.connect(\n      u.pipe(\n        defaultItemSize,\n        u.filter((value) => value !== undefined),\n        u.map((size) => [{ startIndex: 0, endIndex: 0, size }] as SizeRange[])\n      ),\n      sizeRanges\n    )\n\n    const listRefresh = u.streamFromEmitter(\n      u.pipe(\n        sizeRanges,\n        u.withLatestFrom(sizes),\n        u.scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes,\n            }\n          },\n          { changed: false, sizes: initial }\n        ),\n        u.map((value) => value.changed)\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        firstItemIndex,\n        u.scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next }\n          },\n          { diff: 0, prev: 0 }\n        ),\n        u.map((val) => val.diff),\n        u.filter((value) => value > 0)\n      ),\n      unshiftWith\n    )\n\n    // Capture the current list top item before the sizes get refreshed\n    const beforeUnshiftWith = u.streamFromEmitter(unshiftWith)\n\n    u.connect(\n      u.pipe(\n        unshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([unshiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: prepending items does not work with groups')\n          }\n\n          return walk(sizes.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith,\n                prevSize: size,\n              }\n            },\n            {\n              ranges: [] as SizeRange[],\n              prevIndex: 0,\n              prevSize: sizes.lastSize,\n            }\n          ).ranges\n        })\n      ),\n      sizeRanges\n    )\n\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      beforeUnshiftWith,\n      firstItemIndex,\n\n      // output\n      sizes,\n      listRefresh,\n      trackItemSizes,\n      itemSize,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromItemIndex, sizeSystem } from './sizeSystem'\nimport { IndexLocationWithAlign } from './interfaces'\n\nexport type IndexLocation = number | IndexLocationWithAlign\n\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== 'undefined' && 'scrollBehavior' in document.documentElement.style\n\nexport function normalizeIndexLocation(location: IndexLocation) {\n  const result: IndexLocationWithAlign = typeof location === 'number' ? { index: location } : location\n\n  if (!result.align) {\n    result.align = 'start'\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = 'auto'\n  }\n  if (!result.offset) {\n    result.offset = 0\n  }\n  return result as Required<IndexLocationWithAlign>\n}\n\nexport const scrollToIndexSystem = u.system(\n  ([\n    { sizes, totalCount, listRefresh },\n    { scrollingInProgress, viewportHeight, scrollTo, smoothScrollTargetReached, headerHeight, footerHeight },\n  ]) => {\n    const scrollToIndex = u.stream<IndexLocation>()\n    const topListHeight = u.statefulStream(0)\n\n    let unsubscribeNextListRefresh: any = null\n    let cleartTimeoutRef: any = null\n    let unsubscribeListRefresh: any = null\n\n    const cleanup = () => {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh()\n        unsubscribeNextListRefresh = null\n      }\n\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh()\n        unsubscribeListRefresh = null\n      }\n\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef)\n        cleartTimeoutRef = null\n      }\n      u.publish(scrollingInProgress, false)\n    }\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight),\n        u.map(([location, sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          const lastIndex = totalCount - 1\n          let index = normalLocation.index\n\n          index = originalIndexFromItemIndex(index, sizes)\n\n          index = Math.max(0, index, Math.min(lastIndex, index))\n\n          let top = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (align === 'end') {\n            top = Math.round(top - viewportHeight + findMaxKeyValue(sizes.sizeTree, index)[1]!)\n            if (index === lastIndex) {\n              top += footerHeight\n            }\n          } else if (align === 'center') {\n            top = Math.round(top - viewportHeight / 2 + findMaxKeyValue(sizes.sizeTree, index)[1]! / 2)\n          } else {\n            top -= topListHeight\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          const retry = (listChanged: boolean) => {\n            cleanup()\n            if (listChanged) {\n              u.publish(scrollToIndex, location)\n            } else {\n            }\n          }\n\n          cleanup()\n\n          if (behavior === 'smooth') {\n            let listChanged = false\n            unsubscribeListRefresh = u.subscribe(listRefresh, (changed) => {\n              listChanged = listChanged || changed\n            })\n\n            unsubscribeNextListRefresh = u.handleNext(smoothScrollTargetReached, () => {\n              retry(listChanged)\n            })\n          } else {\n            unsubscribeNextListRefresh = u.handleNext(u.pipe(listRefresh, accumulateChange(0)), retry)\n          }\n\n          // if the scroll jump is too small, the list won't get rerendered.\n          // clean this listener\n          cleartTimeoutRef = setTimeout(() => {\n            cleanup()\n          }, 1200)\n\n          u.publish(scrollingInProgress, true)\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    return {\n      scrollToIndex,\n      topListHeight,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem),\n  { singleton: true }\n)\n\nfunction accumulateChange<T>(interval: number): u.Operator<T> {\n  let currentValue: T | undefined\n  let timeout: any\n\n  return (done) => (value) => {\n    currentValue = currentValue || value\n\n    if (timeout) {\n      return\n    }\n\n    timeout = setTimeout(() => {\n      timeout = undefined\n      done(currentValue!)\n    }, interval)\n  }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem, DOWN, ScrollDirection, UP } from './domIOSystem'\nimport { tupleComparator } from './comparators'\n\nexport type NumberTuple = [number, number]\nexport type Overscan = number | { main: number; reverse: number }\nexport const TOP = 'top' as const\nexport const BOTTOM = 'bottom' as const\nexport const NONE = 'none' as const\nexport type ListEnd = typeof TOP | typeof BOTTOM\nexport type ChangeDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport const getOverscan = (overscan: Overscan, end: ListEnd, direction: ScrollDirection) => {\n  if (typeof overscan === 'number') {\n    return (direction === UP && end === TOP) || (direction === DOWN && end === BOTTOM) ? overscan : 0\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse\n    }\n  }\n}\n\nexport const sizeRangeSystem = u.system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight }]) => {\n    const listBoundary = u.stream<NumberTuple>()\n    const topListHeight = u.statefulStream(0)\n    const overscan = u.statefulStream<Overscan>(0)\n\n    const visibleRange = (u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          u.duc(scrollTop),\n          u.duc(viewportHeight),\n          u.duc(headerHeight),\n          u.duc(listBoundary, tupleComparator),\n          u.duc(overscan),\n          u.duc(topListHeight),\n          u.duc(deviation)\n        ),\n        u.map(([scrollTop, viewportHeight, headerHeight, [listTop, listBottom], overscan, topListHeight, deviation]) => {\n          const top = scrollTop - deviation\n          const headerVisible = Math.max(headerHeight - top, 0)\n          let direction: ChangeDirection = NONE\n\n          listTop -= deviation\n          listTop += headerHeight\n          listBottom += headerHeight\n          listBottom -= deviation\n\n          if (listTop > scrollTop + topListHeight) {\n            direction = UP\n          }\n\n          if (listBottom < scrollTop - headerVisible + viewportHeight) {\n            direction = DOWN\n          }\n\n          if (direction !== NONE) {\n            return [\n              Math.max(top - headerHeight - getOverscan(overscan, TOP, direction), 0),\n              top - headerVisible + viewportHeight + getOverscan(overscan, BOTTOM, direction),\n            ] as NumberTuple\n          }\n\n          return null\n        }),\n        u.filter((value) => value != null),\n        u.distinctUntilChanged(tupleComparator as any)\n      ),\n      [0, 0]\n    ) as unknown) as u.StatefulStream<NumberTuple>\n\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n\n      // output\n      visibleRange,\n    }\n  },\n  u.tup(domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { WindowViewportInfo } from './interfaces'\n\nexport const windowScrollerSystem = u.system(([{ scrollTop, scrollTo }]) => {\n  const windowViewportRect = u.stream<WindowViewportInfo>()\n  const windowScrollTop = u.stream<number>()\n  const windowScrollTo = u.stream<ScrollToOptions>()\n  const useWindowScroll = u.statefulStream(false)\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(windowScrollTop, windowViewportRect),\n      u.map(([windowScrollTop, { offsetTop }]) => {\n        return Math.max(0, windowScrollTop - offsetTop)\n      })\n    ),\n    scrollTop\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTo,\n      u.withLatestFrom(windowViewportRect),\n      u.map(([scrollTo, { offsetTop }]) => {\n        return {\n          ...scrollTo,\n          top: scrollTo.top! + offsetTop,\n        }\n      })\n    ),\n    windowScrollTo\n  )\n\n  return {\n    // config\n    useWindowScroll,\n\n    // input\n    windowScrollTop,\n    windowViewportRect,\n\n    // signals\n    windowScrollTo,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { rangeComparator, tupleComparator } from './comparators'\nimport { domIOSystem } from './domIOSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { IndexLocation, normalizeIndexLocation } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\n\nexport interface ElementDimensions {\n  width: number\n  height: number\n}\n\nexport interface GridItem {\n  index: number\n}\n\nexport interface GridLayout {\n  top: number\n  bottom: number\n}\n\nexport interface GridState extends GridLayout {\n  items: GridItem[]\n  offsetTop: number\n  offsetBottom: number\n  itemHeight: number\n  itemWidth: number\n}\n\nconst INITIAL_GRID_STATE: GridState = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst PROBE_GRID_STATE: GridState = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst { ceil, floor, min, max } = Math\n\nfunction hackFloor(val: number) {\n  return ceil(val) - val < 0.03 ? ceil(val) : floor(val)\n}\n\nfunction buildItems(startIndex: number, endIndex: number) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map((_, i) => ({ index: i + startIndex } as GridItem))\n}\nexport const gridSystem = u.system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, windowScrollTo, useWindowScroll, windowScrollTop },\n  ]) => {\n    const totalCount = u.statefulStream(0)\n    const initialItemCount = u.statefulStream(0)\n    const gridState = u.statefulStream(INITIAL_GRID_STATE)\n    const viewportDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const itemDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const scrollToIndex = u.stream<IndexLocation>()\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.map(([, count]) => {\n          return {\n            items: buildItems(0, count - 1),\n            top: 0,\n            bottom: 0,\n            offsetBottom: 0,\n            offsetTop: 0,\n            itemHeight: 0,\n            itemWidth: 0,\n          }\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(\n          u.duc(totalCount),\n          visibleRange,\n          u.duc(itemDimensions, (prev, next) => prev && prev.width === next.width && prev.height === next.height)\n        ),\n        u.withLatestFrom(viewportDimensions),\n        u.map(([[totalCount, [startOffset, endOffset], item], viewport]) => {\n          const { height: itemHeight, width: itemWidth } = item\n          const { width: viewportWidth } = viewport\n\n          if (totalCount === 0 || viewportWidth === 0) {\n            return INITIAL_GRID_STATE\n          }\n\n          if (itemWidth === 0) {\n            return PROBE_GRID_STATE\n          }\n\n          const perRow = hackFloor(viewportWidth / itemWidth)\n          let startIndex = perRow * floor(startOffset / itemHeight)\n          let endIndex = perRow * ceil(endOffset / itemHeight) - 1\n          endIndex = min(totalCount - 1, endIndex)\n          startIndex = min(endIndex, max(0, startIndex))\n\n          const items = buildItems(startIndex, endIndex)\n          const { top, bottom } = gridLayout(viewport, item, items)\n          const totalHeight = ceil(totalCount / perRow) * itemHeight\n          const offsetBottom = totalHeight - bottom\n\n          return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth } as GridState\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        viewportDimensions,\n        u.map(({ height }) => height)\n      ),\n      viewportHeight\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(viewportDimensions, itemDimensions, gridState),\n        u.map(([viewportDimensions, item, { items }]) => {\n          const { top, bottom } = gridLayout(viewportDimensions, item, items)\n\n          return [top, bottom] as [number, number]\n        }),\n        u.distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    )\n\n    u.connect(\n      u.pipe(\n        listBoundary,\n        u.withLatestFrom(gridState),\n        u.map(([[, bottom], { offsetBottom }]) => {\n          return { bottom, offsetBottom }\n        })\n      ),\n      stateFlags.listStateListener\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].index === totalCount - 1),\n        u.map(([, totalCount]) => totalCount - 1),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0\n        }),\n        u.mapTo(0),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          }\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    u.connect(rangeChanged, scrollSeek.scrollSeekRangeChanged)\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(viewportDimensions, itemDimensions, totalCount),\n        u.map(([location, viewport, item, totalCount]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          let index = normalLocation.index\n\n          index = Math.max(0, index, Math.min(totalCount - 1, index))\n\n          let top = itemTop(viewport, item, index)\n\n          if (align === 'end') {\n            top = Math.round(top - viewport.height + item.height)\n          } else if (align === 'center') {\n            top = Math.round(top - viewport.height / 2 + item.height / 2)\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        gridState,\n        u.map((gridState) => {\n          return gridState.offsetBottom + gridState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(\n      u.pipe(\n        windowViewportRect,\n        u.map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    )\n\n    return {\n      // input\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      windowScrollTop,\n      initialItemCount,\n      ...scrollSeek,\n\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      propsReady,\n    }\n  },\n  u.tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem)\n)\n\nfunction gridLayout(viewport: ElementDimensions, item: ElementDimensions, items: GridItem[]): GridLayout {\n  const { height: itemHeight } = item\n  if (itemHeight === undefined || items.length === 0) {\n    return { top: 0, bottom: 0 }\n  }\n\n  const top = itemTop(viewport, item, items[0].index)\n  const bottom = itemTop(viewport, item, items[items.length - 1].index) + itemHeight\n  return { top, bottom }\n}\n\nfunction itemTop(viewport: ElementDimensions, item: ElementDimensions, index: number) {\n  const perRow = itemsPerRow(viewport.width, item.width)\n  return floor(index / perRow) * item.height\n}\n\nfunction itemsPerRow(viewportWidth: number, itemWidth: number) {\n  return hackFloor(viewportWidth / itemWidth)\n}\n","import { useRef } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nexport type CallbackRefParam = HTMLElement | null\n\nexport function useSizeWithElRef(callback: (e: HTMLElement) => void, enabled = true) {\n  const ref = useRef<CallbackRefParam>(null)\n  const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n    const element = entries[0].target as HTMLElement\n    // Revert the RAF below - it causes a blink in the upward scrolling fix\n    // See e2e/chat example\n    // Avoid Resize loop limit exceeded error\n    // https://github.com/edunad/react-virtuoso/commit/581d4558f2994adea375291b76fe59605556c08f\n    // requestAnimationFrame(() => {\n    //\n    // if display: none, the element won't have an offsetParent\n    // measuring it at this mode is not going to work\n    // https://stackoverflow.com/a/21696585/1009797\n    if (element.offsetParent !== null) {\n      callback(element)\n    }\n    // })\n  })\n\n  const callbackRef = (elRef: CallbackRefParam) => {\n    if (elRef && enabled) {\n      observer.observe(elRef)\n      ref.current = elRef\n    } else {\n      if (ref.current) {\n        observer.unobserve(ref.current)\n      }\n      ref.current = null\n    }\n  }\n\n  return { ref, callbackRef }\n}\n\nexport default function useSize(callback: (e: HTMLElement) => void, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef\n}\n","import { useEffect, useRef, useCallback } from 'react'\nimport { useSizeWithElRef } from './useSize'\nimport { WindowViewportInfo } from '../interfaces'\n\nexport default function useWindowViewportRectRef(callback: (info: WindowViewportInfo) => void) {\n  const viewportInfo = useRef<WindowViewportInfo | null>(null)\n\n  const calculateInfo = useCallback(\n    (element: HTMLElement | null) => {\n      if (element === null) {\n        return\n      }\n      const rect = element.getBoundingClientRect()\n      const visibleHeight = window.innerHeight - Math.max(0, rect.top)\n\n      const visibleWidth = rect.width\n      const offsetTop = rect.top + window.pageYOffset\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth,\n      }\n      callback(viewportInfo.current)\n    },\n    [callback]\n  )\n\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo)\n\n  const windowEH = useCallback(() => {\n    calculateInfo(ref.current)\n  }, [calculateInfo, ref])\n\n  useEffect(() => {\n    window.addEventListener('scroll', windowEH)\n    window.addEventListener('resize', windowEH)\n    return () => {\n      window.removeEventListener('scroll', windowEH)\n      window.removeEventListener('resize', windowEH)\n    }\n  }, [windowEH])\n\n  return callbackRef\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import { useRef, useCallback, useEffect } from 'react'\nimport * as u from '@virtuoso.dev/urx'\nimport { correctItemSize } from '../utils/correctItemSize'\n\nexport type ScrollerRef = Window | HTMLElement | null\n\nexport default function useScrollTop(\n  scrollTopCallback: (scrollTop: number) => void,\n  smoothScrollTargetReached: (yes: true) => void,\n  scrollerElement: any,\n  scrollerRefCallback: (ref: ScrollerRef) => void = u.noop\n) {\n  const scrollerRef = useRef<HTMLElement | null | Window>(null)\n  const scrollTopTarget = useRef<any>(null)\n  const timeoutRef = useRef<any>(null)\n\n  const handler = useCallback(\n    (ev: Event) => {\n      const el = ev.target as HTMLElement\n      const scrollTop =\n        (el as any) === window || (el as any) === document ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop\n      scrollTopCallback(Math.max(scrollTop, 0))\n\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === el.scrollHeight - correctItemSize(el, 'height')) {\n          scrollTopTarget.current = null\n          smoothScrollTargetReached(true)\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current)\n            timeoutRef.current = null\n          }\n        }\n      }\n    },\n    [scrollTopCallback, smoothScrollTargetReached]\n  )\n\n  useEffect(() => {\n    const localRef = scrollerRef.current!\n\n    scrollerRefCallback(scrollerRef.current)\n    handler(({ target: localRef } as unknown) as Event)\n    localRef.addEventListener('scroll', handler, { passive: true })\n\n    return () => {\n      scrollerRefCallback(null)\n      localRef.removeEventListener('scroll', handler)\n    }\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback])\n\n  function scrollToCallback(location: ScrollToOptions) {\n    const scrollerElement = scrollerRef.current\n    if (!scrollerElement) {\n      return\n    }\n\n    const isSmooth = location.behavior === 'smooth'\n\n    let offsetHeight: number\n    let scrollHeight: number\n    let scrollTop: number\n\n    if (scrollerElement === window) {\n      // this is not a mistake\n      scrollHeight = Math.max(correctItemSize(document.documentElement, 'height'), document.documentElement.scrollHeight)\n      offsetHeight = window.innerHeight\n      scrollTop = document.documentElement.scrollTop\n    } else {\n      scrollHeight = (scrollerElement as HTMLElement).scrollHeight\n      offsetHeight = correctItemSize(scrollerElement as HTMLElement, 'height')\n      scrollTop = (scrollerElement as HTMLElement).scrollTop\n    }\n\n    // avoid system hanging because the DOM never called back\n    // with the scrollTop\n    // scroller is already at this location\n    if (offsetHeight === scrollHeight || location.top === scrollTop) {\n      scrollTopCallback(scrollTop)\n      if (isSmooth) {\n        smoothScrollTargetReached(true)\n      }\n      return\n    }\n\n    const maxScrollTop = scrollHeight - offsetHeight\n    location.top = Math.max(Math.min(maxScrollTop, location.top!), 0)\n\n    if (isSmooth) {\n      scrollTopTarget.current = location.top\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        scrollTopTarget.current = null\n        smoothScrollTargetReached(true)\n      }, 1000)\n    } else {\n      scrollTopTarget.current = null\n    }\n\n    scrollerElement.scrollTo(location)\n  }\n\n  function scrollByCallback(location: ScrollToOptions) {\n    if (scrollTopTarget.current === null) {\n      scrollerRef.current!.scrollBy(location)\n    }\n  }\n\n  return { scrollerRef, scrollByCallback, scrollToCallback }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { empty } from './AATree'\nimport { sizeSystem } from './sizeSystem'\nimport { domIOSystem } from './domIOSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialTopMostItemIndexSystem = u.system(\n  ([{ sizes, listRefresh }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = u.statefulStream(true)\n    const initialTopMostItemIndex = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialTopMostItemIndex),\n        u.filter(([_, index]) => index !== 0),\n        u.mapTo(false)\n      ),\n      scrolledToInitialItem\n    )\n\n    u.subscribe(\n      u.pipe(\n        listRefresh,\n        u.withLatestFrom(scrolledToInitialItem, sizes),\n        u.filter(([, scrolledToInitialItem, { sizeTree }]) => {\n          return !empty(sizeTree) && !scrolledToInitialItem\n        }),\n        u.withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex]) => {\n        u.handleNext(scrollTop, () => {\n          u.publish(scrolledToInitialItem, true)\n        })\n\n        setTimeout(() => {\n          u.publish(scrollToIndex, initialTopMostItemIndex)\n        })\n      }\n    )\n\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { FollowOutput, FollowOutputScalarType } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\n\nfunction normalizeFollowOutput(follow: FollowOutputScalarType): FollowOutputScalarType {\n  if (!follow) {\n    return false\n  }\n  return follow === 'smooth' ? 'smooth' : 'auto'\n}\n\nconst behaviorFromFollowOutput = (follow: FollowOutput, isAtBottom: boolean) => {\n  if (typeof follow === 'function') {\n    return normalizeFollowOutput(follow(isAtBottom))\n  }\n  return isAtBottom && normalizeFollowOutput(follow)\n}\n\nexport const followOutputSystem = u.system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n  ]) => {\n    const followOutput = u.statefulStream<FollowOutput>(false)\n    let pendingScrollHandle: any = null\n\n    function scrollToBottom(totalCount: number, followOutputBehavior: FollowOutputScalarType) {\n      u.publish(scrollToIndex, {\n        index: totalCount - 1,\n        align: 'end',\n        behavior: followOutputBehavior,\n      })\n    }\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.pipe(u.duc(totalCount), u.skip(1)), didMount),\n        u.withLatestFrom(u.duc(followOutput), isAtBottom, scrolledToInitialItem),\n        u.map(([[totalCount, didMount], followOutput, isAtBottom, scrolledToInitialItem]) => {\n          let shouldFollow = didMount && scrolledToInitialItem\n          let followOutputBehavior: FollowOutputScalarType = 'auto'\n\n          if (shouldFollow) {\n            followOutputBehavior = behaviorFromFollowOutput(followOutput, isAtBottom)\n            shouldFollow = shouldFollow && !!followOutputBehavior\n          }\n\n          return { totalCount, shouldFollow, followOutputBehavior }\n        }),\n        u.filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle()\n          pendingScrollHandle = null\n        }\n\n        pendingScrollHandle = u.handleNext(listRefresh, () => {\n          scrollToBottom(totalCount, followOutputBehavior)\n          pendingScrollHandle = null\n        })\n      }\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.duc(followOutput), totalCount, propsReady),\n        u.filter(([follow, , ready]) => follow && ready),\n        u.scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next }\n          },\n          { refreshed: false, value: 0 }\n        ),\n        u.filter(({ refreshed }) => refreshed),\n        u.withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput, totalCount]) => {\n        const cancel = u.handleNext(atBottomState, (state) => {\n          if (followOutput && !state.atBottom && state.notAtBottomBecause === 'SIZE_INCREASED' && !pendingScrollHandle) {\n            scrollToBottom(totalCount, 'auto')\n          }\n        })\n        setTimeout(cancel, 100)\n      }\n    )\n\n    u.subscribe(\n      u.pipe(u.combineLatest(u.duc(followOutput), atBottomState), u.withLatestFrom(totalCount)),\n      ([[followOutput, state], totalCount]) => {\n        if (followOutput && !state.atBottom && state.notAtBottomBecause === 'VIEWPORT_HEIGHT_DECREASING') {\n          scrollToBottom(totalCount, 'auto')\n        }\n      }\n    )\n\n    return { followOutput }\n  },\n  u.tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem)\n)\n","import {\n  combineLatest,\n  connect,\n  distinctUntilChanged,\n  system,\n  filter,\n  map,\n  pipe,\n  prop,\n  stream,\n  streamFromEmitter,\n  tup,\n} from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { sizeSystem, hasGroups } from './sizeSystem'\nexport interface GroupIndexesAndCount {\n  totalCount: number\n  groupIndices: number[]\n}\n\nexport function groupCountsToIndicesAndCount(counts: number[]) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount)\n      acc.totalCount += groupCount + 1\n      return acc\n    },\n    {\n      totalCount: 0,\n      groupIndices: [],\n    } as GroupIndexesAndCount\n  )\n}\n\nexport const groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = stream<number[]>()\n  const topItemsIndexes = stream<[number]>()\n  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)))\n  connect(pipe(groupIndicesAndCount, map(prop('totalCount'))), totalCount)\n  connect(pipe(groupIndicesAndCount, map(prop('groupIndices'))), groupIndices)\n\n  connect(\n    pipe(\n      combineLatest(scrollTop, sizes, headerHeight),\n      filter(([_, sizes]) => hasGroups(sizes)),\n      map(([scrollTop, state, headerHeight]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop - headerHeight, 0), 'v')[0]),\n      distinctUntilChanged(),\n      map((index) => [index])\n    ),\n    topItemsIndexes\n  )\n\n  return { groupCounts, topItemsIndexes }\n}, tup(sizeSystem, domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { empty, findMaxKeyValue, Range, rangesWithin } from './AATree'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { Item, ListItem, ListRange } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { Data, originalIndexFromItemIndex, SizeState, sizeSystem, hasGroups, rangesWithinOffsets } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { rangeComparator, tupleComparator } from './comparators'\n\nexport type ListItems = ListItem<unknown>[]\nexport interface TopListState {\n  items: ListItems\n  listHeight: number\n}\n\nexport interface ListState {\n  items: ListItems\n  topItems: ListItems\n  topListHeight: number\n  offsetTop: number\n  offsetBottom: number\n  top: number\n  bottom: number\n  totalCount: number\n}\n\nfunction probeItemSet(index: number, sizes: SizeState, data: Data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes)\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0]\n\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] },\n    ]\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }]\n}\n\nconst EMPTY_LIST_STATE: ListState = {\n  items: [] as ListItems,\n  topItems: [] as ListItems,\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n}\n\nfunction transposeItems(items: Item<any>[], sizes: SizeState, firstItemIndex: number): ListItems {\n  if (items.length === 0) {\n    return []\n  }\n\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }))\n  }\n\n  const startIndex = items[0].index\n  const endIndex = items[items.length - 1].index\n\n  const transposedItems = [] as ListItems\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex)\n  let currentRange: Range<number> | undefined = undefined\n  let currentGroupIndex = 0\n\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift()!\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start)\n    }\n\n    let transposedItem: { type: 'group'; index: number } | { index: number; groupIndex: number }\n\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: 'group' as const,\n        index: currentGroupIndex,\n      }\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex,\n      }\n    }\n\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data,\n    })\n  }\n\n  return transposedItems\n}\n\nexport function buildListState(\n  items: Item<any>[],\n  topItems: Item<any>[],\n  totalCount: number,\n  sizes: SizeState,\n  firstItemIndex: number\n): ListState {\n  const { lastSize, lastOffset, lastIndex } = sizes\n  let offsetTop = 0\n  let bottom = 0\n\n  if (items.length > 0) {\n    offsetTop = items[0].offset\n    const lastItem = items[items.length - 1]\n    bottom = lastItem.offset + lastItem.size\n  }\n\n  const total = lastOffset + (totalCount - lastIndex) * lastSize\n  const top = offsetTop\n  const offsetBottom = total - bottom\n\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n  }\n}\n\nexport const listStateSystem = u.system(\n  ([\n    { sizes, totalCount, data, firstItemIndex },\n    groupedListSystem,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n  ]) => {\n    const topItemsIndexes = u.statefulStream<Array<number>>([])\n    const itemsRendered = u.stream<ListItems>()\n\n    u.connect(groupedListSystem.topItemsIndexes, topItemsIndexes)\n\n    const listState = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          didMount,\n          u.duc(visibleRange),\n          u.duc(totalCount),\n          u.duc(sizes),\n          u.duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          u.duc(topItemsIndexes),\n          u.duc(firstItemIndex),\n          data\n        ),\n        u.filter(([mount]) => mount),\n        u.map(\n          ([\n            ,\n            [startOffset, endOffset],\n            totalCount,\n            sizes,\n            initialTopMostItemIndex,\n            scrolledToInitialItem,\n            topItemsIndexes,\n            firstItemIndex,\n            data,\n          ]) => {\n            const sizesValue = sizes\n            const { sizeTree, offsetTree } = sizesValue\n\n            if (totalCount === 0 || (startOffset === 0 && endOffset === 0)) {\n              return EMPTY_LIST_STATE\n            }\n\n            if (empty(sizeTree)) {\n              return buildListState(probeItemSet(initialTopMostItemIndex, sizesValue, data), [], totalCount, sizesValue, firstItemIndex)\n            }\n\n            const topItems = [] as Item<any>[]\n\n            if (topItemsIndexes.length > 0) {\n              const startIndex = topItemsIndexes[0]\n              const endIndex = topItemsIndexes[topItemsIndexes.length - 1]\n              let offset = 0\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value\n                const rangeStartIndex = Math.max(range.start, startIndex)\n                const rangeEndIndex = Math.min(range.end, endIndex)\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            }\n\n            // If the list hasn't scrolled to the initial item because the initial item was set,\n            // render empty list.\n            //\n            // This is a condition to be evaluated past the probe check, do not merge\n            // with the totalCount check above\n            if (!scrolledToInitialItem) {\n              return buildListState([], topItems, totalCount, sizesValue, firstItemIndex)\n            }\n\n            const minStartIndex = topItemsIndexes.length > 0 ? topItemsIndexes[topItemsIndexes.length - 1] + 1 : 0\n\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex)\n            if (offsetPointRanges.length === 0) {\n              return null\n            }\n\n            const maxIndex = totalCount - 1\n\n            const items = u.tap([] as Item<any>[], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value\n                let offset = point.offset\n                let rangeStartIndex = range.start\n                const size = point.size\n\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset) / size)\n                  offset += (rangeStartIndex - range.start) * size\n                }\n\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size\n                  rangeStartIndex = minStartIndex\n                }\n\n                const endIndex = Math.min(range.end, maxIndex)\n\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break\n                  }\n\n                  result.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            })\n\n            return buildListState(items, topItems, totalCount, sizesValue, firstItemIndex)\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        u.filter((value) => value !== null),\n        u.distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    )\n\n    u.connect(\n      u.pipe(\n        data,\n        u.filter((data) => data !== undefined),\n        u.map((data) => data!.length)\n      ),\n      totalCount\n    )\n\n    u.connect(u.pipe(listState, u.map(u.prop('topListHeight'))), topListHeight)\n    u.connect(topListHeight, rangeTopListHeight)\n    u.connect(listState, stateFlags.listStateListener)\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    )\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => state.items)\n      ),\n      itemsRendered\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount, data),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].originalIndex === totalCount - 1),\n        u.map(([, totalCount, data]) => [totalCount - 1, data] as [number, unknown[]]),\n        u.distinctUntilChanged(tupleComparator),\n        u.map(([count]) => count as number)\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.throttleTime(200),\n        u.filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length\n        }),\n        u.map(({ items }) => items[0].index),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          } as ListRange\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, ...stateFlags }\n  },\n  u.tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem\n  ),\n  { singleton: true }\n)\n","export function simpleMemoize<T extends () => any>(func: T): T {\n  let called = false\n  let result: unknown\n\n  return (() => {\n    if (!called) {\n      called = true\n      result = func()\n    }\n    return result\n  }) as T\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem, buildListState } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialItemCountSystem = u.system(\n  ([{ sizes, firstItemIndex, data }, { listState }, { didMount }]) => {\n    const initialItemCount = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.withLatestFrom(sizes, firstItemIndex, data),\n        u.map(([[, count], sizes, firstItemIndex, data = []]) => {\n          let includedGroupsCount = 0\n          if (sizes.groupIndices.length > 0) {\n            for (const index of sizes.groupIndices) {\n              if (index - includedGroupsCount >= count) {\n                break\n              }\n              includedGroupsCount++\n            }\n          }\n          const adjustedCount = count + includedGroupsCount\n          const items = Array.from({ length: adjustedCount }).map((_, index) => ({ index, size: 0, offset: 0, data: data[index] }))\n          return buildListState(items, [], adjustedCount, sizes, firstItemIndex)\n        })\n      ),\n      listState\n    )\n\n    return { initialItemCount }\n  },\n  u.tup(sizeSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n)\n","import { connect, system, map, pipe, statefulStream, tup, filter } from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\n\nexport const topItemCountSystem = system(([{ topItemsIndexes }]) => {\n  const topItemCount = statefulStream(0)\n\n  connect(\n    pipe(\n      topItemCount,\n      filter((length) => length > 0),\n      map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  )\n  return { topItemCount }\n}, tup(listStateSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const totalListHeightSystem = u.system(\n  ([{ footerHeight, headerHeight }, { listState }]) => {\n    const totalListHeightChanged = u.stream<number>()\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(footerHeight, headerHeight, listState),\n        u.map(([footerHeight, headerHeight, listState]) => {\n          return footerHeight + headerHeight + listState.offsetBottom + listState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(u.duc(totalListHeight), totalListHeightChanged)\n\n    return { totalListHeight, totalListHeightChanged }\n  },\n  u.tup(domIOSystem, listStateSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { UP, domIOSystem } from './domIOSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { ListItem } from './interfaces'\n\n/**\n * Fixes upward scrolling by calculating and compensation from changed item heights, using scrollBy.\n */\nexport const upwardScrollFixSystem = u.system(\n  ([\n    { scrollBy, scrollTop, scrollDirection, deviation, scrollingInProgress },\n    { isScrolling },\n    { listState },\n    { beforeUnshiftWith, sizes },\n  ]) => {\n    const deviationOffset = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.scan(\n          ([, prevItems], { items }) => {\n            let newDev = 0\n            if (prevItems.length > 0 && items.length > 0) {\n              const firstItemIndex = items[0].originalIndex\n              const prevFirstItemIndex = prevItems[0].originalIndex\n              const atStart = firstItemIndex === 0 && prevFirstItemIndex === 0\n\n              if (!atStart) {\n                // Handles an item taller than the viewport\n                if (firstItemIndex === prevFirstItemIndex) {\n                  newDev = items[0].size - prevItems[0].size\n                } else {\n                  for (let index = items.length - 1; index >= 0; index--) {\n                    const item = items[index]\n\n                    const prevItem = prevItems.find((pItem) => pItem.originalIndex === item.originalIndex)\n\n                    if (!prevItem) {\n                      continue\n                    }\n\n                    if (item.offset !== prevItem.offset) {\n                      newDev = item.offset - prevItem.offset\n                      break\n                    }\n                  }\n                }\n              }\n            }\n            return [newDev, items] as [number, ListItem<any>[]]\n          },\n          [0, []] as [number, ListItem<any>[]]\n        ),\n        u.filter(([amount]) => amount !== 0),\n        u.withLatestFrom(scrollTop, scrollDirection, scrollingInProgress),\n        u.filter(([, scrollTop, scrollDirection, scrollingInProgress]) => {\n          return !scrollingInProgress && scrollTop !== 0 && scrollDirection === UP\n        }),\n        u.map(([[amount]]) => {\n          return amount\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        deviationOffset,\n        u.withLatestFrom(deviation),\n        u.map(([amount, deviation]) => deviation - amount)\n      ),\n      deviation\n    )\n\n    // when the browser stops scrolling,\n    // restore the position and reset the glitching\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.statefulStreamFromEmitter(isScrolling, false), deviation),\n        u.filter(([is, deviation]) => !is && deviation !== 0),\n        u.map(([_, deviation]) => deviation),\n        u.throttleTime(1)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n          u.publish(deviation, 0)\n        } else {\n          u.publish(deviation, 0)\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n        }\n      }\n    )\n\n    u.connect(\n      u.pipe(\n        beforeUnshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([offset, { lastSize }]) => offset * lastSize)\n      ),\n      deviationOffset\n    )\n\n    return { deviation }\n  },\n  u.tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem)\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const initialScrollTopSystem = u.system(\n  ([{ totalListHeight }, { didMount }, { scrollTo }]) => {\n    const initialScrollTop = u.statefulStream(0)\n\n    u.subscribe(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialScrollTop),\n        u.filter(([, offset]) => offset !== 0),\n        u.map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        u.handleNext(\n          u.pipe(\n            totalListHeight,\n            u.filter((val) => val !== 0)\n          ),\n          () => {\n            setTimeout(() => {\n              u.publish(scrollTo, location)\n            })\n          }\n        )\n      }\n    )\n\n    return {\n      initialScrollTop,\n    }\n  },\n  u.tup(totalListHeightSystem, propsReadySystem, domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const alignToBottomSystem = u.system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = u.statefulStream(false)\n\n    const paddingTopAddition = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        u.filter(([enabled]) => enabled),\n        u.map(([, viewportHeight, totalListHeight]) => {\n          return Math.max(0, viewportHeight - totalListHeight)\n        }),\n        u.distinctUntilChanged()\n      ),\n      0\n    )\n\n    return { alignToBottom, paddingTopAddition }\n  },\n  u.tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { followOutputSystem } from './followOutputSystem'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialItemCountSystem } from './initialItemCountSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { topItemCountSystem } from './topItemCountSystem'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { upwardScrollFixSystem } from './upwardScrollFixSystem'\nimport { initialScrollTopSystem } from './initialScrollTopSystem'\nimport { alignToBottomSystem } from './alignToBottomSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\n\n// workaround the growing list of systems below\n// fix this with 4.1 recursive conditional types\nconst featureGroup1System = u.system(\n  ([sizeRange, initialItemCount, propsReady, scrollSeek, totalListHeight, initialScrollTopSystem, alignToBottom, windowScroller]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem,\n      ...alignToBottom,\n      ...windowScroller,\n    }\n  },\n  u.tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem\n  )\n)\n\nexport const listSystem = u.system(\n  ([\n    { totalCount, sizeRanges, fixedItemSize, defaultItemSize, trackItemSizes, itemSize, data, firstItemIndex, groupIndices },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1,\n  ]) => {\n    u.connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged)\n    u.connect(u.pipe(featureGroup1.windowViewportRect, u.map(u.prop('visibleHeight'))), domIO.viewportHeight)\n\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      ...followOutput,\n\n      // output\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n    }\n  },\n  u.tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System\n  )\n)\n","import { simpleMemoize } from './simpleMemoize'\n\nconst WEBKIT_STICKY = '-webkit-sticky'\nconst STICKY = 'sticky'\n\nexport const positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === 'undefined') {\n    return STICKY\n  }\n  const node = document.createElement('div')\n  node.style.position = WEBKIT_STICKY\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY\n})\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport {\n  compose,\n  connect,\n  getValue,\n  map,\n  pipe,\n  publish,\n  statefulStream,\n  stream,\n  Stream,\n  subscribe,\n  system,\n  tup,\n  withLatestFrom,\n  statefulStreamFromEmitter,\n  distinctUntilChanged,\n  noop,\n} from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, CSSProperties, FC } from 'react'\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect'\nimport useChangedChildSizes from './hooks/useChangedChildSizes'\nimport useScrollTop from './hooks/useScrollTop'\nimport useSize from './hooks/useSize'\nimport { Components, ComputeItemKey, GroupContent, GroupItemContent, ItemContent, ListRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { positionStickyCssValue } from './utils/positionStickyCssValue'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { correctItemSize } from './utils/correctItemSize'\n\nexport function identity<T>(value: T) {\n  return value\n}\n\nconst listComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any> | GroupItemContent<any>>((index: number) => `Item ${index}`)\n  const groupContent = statefulStream<GroupContent>((index: number) => `Group ${index}`)\n  const components = statefulStream<Components>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any>>(identity)\n  const headerFooterTag = statefulStream('div')\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof Components>(propName: K, defaultValue: Components[K] | null | 'div' = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp('Footer'),\n    HeaderComponent: distinctProp('Header'),\n    TopItemListComponent: distinctProp('TopItemList'),\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    GroupComponent: distinctProp('Group', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nexport function addDeprecatedAlias<T>(prop: Stream<T>, message: string) {\n  const alias = stream<T>()\n  subscribe(alias, () =>\n    console.warn(`react-virtuoso: You are using a deprecated property. ${message}`, 'color: red;', 'color: inherit;', 'color: blue;')\n  )\n  connect(alias, prop)\n  return alias\n}\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(propsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    group: addDeprecatedAlias(propsSystem.groupContent, 'Rename the %cgroup%c prop to %cgroupContent.'),\n    topItems: addDeprecatedAlias(listSystem.topItemCount, 'Rename the %ctopItems%c prop to %ctopItemCount.'),\n    itemHeight: addDeprecatedAlias(listSystem.fixedItemHeight, 'Rename the %citemHeight%c prop to %cfixedItemHeight.'),\n    scrollingStateChange: addDeprecatedAlias(listSystem.isScrolling, 'Rename the %cscrollingStateChange%c prop to %cisScrolling.'),\n    adjustForPrependedItems: stream<any>(),\n    maxHeightCacheSize: stream<any>(),\n    footer: stream<any>(),\n    header: stream<any>(),\n    HeaderContainer: stream<any>(),\n    FooterContainer: stream<any>(),\n    ItemContainer: stream<any>(),\n    ScrollContainer: stream<any>(),\n    GroupContainer: stream<any>(),\n    ListContainer: stream<any>(),\n    emptyComponent: stream<any>(),\n    scrollSeek: stream<any>(),\n  }\n\n  subscribe(deprecatedProps.adjustForPrependedItems, () => {\n    console.warn(\n      `react-virtuoso: adjustForPrependedItems is no longer supported. Use the firstItemIndex property instead - https://virtuoso.dev/prepend-items.`,\n      'color: red;',\n      'color: inherit;',\n      'color: blue;'\n    )\n  })\n\n  subscribe(deprecatedProps.maxHeightCacheSize, () => {\n    console.warn(`react-virtuoso: maxHeightCacheSize is no longer necessary. Setting it has no effect - remove it from your code.`)\n  })\n\n  subscribe(deprecatedProps.HeaderContainer, () => {\n    console.warn(\n      `react-virtuoso: HeaderContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the header component and pass components.Header to change its contents.`\n    )\n  })\n\n  subscribe(deprecatedProps.FooterContainer, () => {\n    console.warn(\n      `react-virtuoso: FooterContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the footer component and pass components.Footer to change its contents.`\n    )\n  })\n\n  function deprecateComponentProp(stream: Stream<any>, componentName: string, propName: string) {\n    connect(\n      pipe(\n        stream,\n        withLatestFrom(propsSystem.components),\n        map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      propsSystem.components\n    )\n  }\n\n  subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    publish(propsSystem.components, { ...getValue(propsSystem.components), ScrollSeekPlaceholder: placeholder })\n    publish(listSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.footer, 'Footer', 'footer')\n  deprecateComponentProp(deprecatedProps.header, 'Header', 'header')\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n  deprecateComponentProp(deprecatedProps.emptyComponent, 'EmptyPlaceholder', 'emptyComponent')\n  deprecateComponentProp(deprecatedProps.GroupContainer, 'Group', 'GroupContainer')\n\n  return { ...listSystem, ...propsSystem, ...deprecatedProps }\n}, tup(listSystem, listComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => <div style={{ height }}></div>\n\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1 }\n\nexport const Items = React.memo(function VirtuosoItems({ showTopList = false }: { showTopList?: boolean }) {\n  const listState = useEmitterValue('listState')\n  const deviation = useEmitterValue('deviation')\n  const sizeRanges = usePublisher('sizeRanges')\n  const itemContent = useEmitterValue('itemContent')\n  const groupContent = useEmitterValue('groupContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n\n  const ref = useChangedChildSizes(sizeRanges, itemSize, trackItemSizes)\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const GroupComponent = useEmitterValue('GroupComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const hasGroups = useEmitterValue('groupIndices').length > 0\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const scrolledToInitialItem = useEmitterValue('scrolledToInitialItem')\n\n  // const calculatedHeight = listState.offsetBottom + listState.bottom\n  const containerStyle: CSSProperties = showTopList\n    ? {}\n    : {\n        boxSizing: 'border-box',\n        paddingTop: listState.offsetTop + paddingTopAddition,\n        paddingBottom: listState.offsetBottom,\n        marginTop: deviation,\n        // height: calculatedHeight,\n      }\n\n  if (!showTopList && listState.items.length === 0 && EmptyPlaceholder && scrolledToInitialItem) {\n    return createElement(EmptyPlaceholder)\n  }\n\n  return createElement(\n    ListComponent,\n    { ref, style: containerStyle },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex!\n      const key = computeItemKey(index, item.data)\n\n      if (isSeeking) {\n        return createElement(ScrollSeekPlaceholder, { key, index: item.index, height: item.size })\n      }\n\n      if (item.type === 'group') {\n        return createElement(\n          GroupComponent,\n          {\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            style: GROUP_STYLE,\n          } as any,\n          groupContent(item.index)\n        )\n      } else {\n        return createElement(\n          ItemComponent,\n          {\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            'data-item-group-index': item.groupIndex,\n          } as any,\n          hasGroups\n            ? (itemContent as GroupItemContent<any>)(item.index, item.groupIndex!, item.data)\n            : (itemContent as ItemContent<any>)(item.index, item.data)\n        )\n      }\n    })\n  )\n})\n\nexport const scrollerStyle: CSSProperties = {\n  height: '100%',\n  outline: 'none',\n  overflowY: 'auto',\n  position: 'relative',\n  WebkitOverflowScrolling: 'touch',\n}\n\nexport const viewportStyle: CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  top: 0,\n}\n\nconst topItemListStyle: CSSProperties = {\n  width: '100%',\n  position: positionStickyCssValue(),\n  top: 0,\n}\n\nconst Header: FC = React.memo(function VirtuosoHeader() {\n  const Header = useEmitterValue('HeaderComponent')\n  const headerHeight = usePublisher('headerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => headerHeight(correctItemSize(el, 'height')))\n  return Header ? createElement(headerFooterTag, { ref }, createElement(Header)) : null\n})\n\nconst Footer: FC = React.memo(function VirtuosoFooter() {\n  const Footer = useEmitterValue('FooterComponent')\n  const footerHeight = usePublisher('footerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => footerHeight(correctItemSize(el, 'height')))\n  return Footer ? createElement(headerFooterTag, { ref }, createElement(Footer)) : null\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nexport function buildScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollTopCallback = usePublisher('scrollTop')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const scrollerRefCallback = useEmitterValue('scrollerRef')\n\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollTopCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    )\n\n    useEmitter('scrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef as React.MutableRefObject<HTMLDivElement | null>,\n        style: { ...scrollerStyle, ...style },\n        tabIndex: 0,\n        ...props,\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nexport function buildWindowScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollTopCallback = usePublisher('windowScrollTop')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const totalListHeight = useEmitterValue('totalListHeight')\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollTopCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      scrollerRef.current = window\n      return () => {\n        scrollerRef.current = null\n      }\n    }, [scrollerRef])\n\n    useEmitter('windowScrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        style: { position: 'relative', ...style, ...(totalListHeight !== 0 ? { height: totalListHeight } : {}) },\n        ...props,\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nconst Viewport: FC = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef}>\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle}>\n      {children}\n    </div>\n  )\n}\n\nconst TopItemListContainer: FC = ({ children }) => {\n  const TopItemList = useEmitterValue('TopItemListComponent')\n  const headerHeight = useEmitterValue('headerHeight')\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` }\n  return createElement(TopItemList || 'div', { style }, children)\n}\n\nconst ListRoot: FC<ListRootProps> = React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const showTopList = useEmitterValue('topItemsIndexes').length > 0\n  const TheScroller = useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = useWindowScroll ? WindowViewport : Viewport\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <Header />\n        <Items />\n        <Footer />\n      </TheViewport>\n      {showTopList && (\n        <TopItemListContainer>\n          <Items showTopList={true} />\n        </TopItemListContainer>\n      )}\n    </TheScroller>\n  )\n})\n\nexport type ListHandle = RefHandle<typeof List>\n\nexport const { Component: List, usePublisher, useEmitterValue, useEmitter } = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      groupContent: 'groupContent',\n      overscan: 'overscan',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      headerFooterTag: 'headerFooterTag',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      scrollerRef: 'scrollerRef',\n\n      // deprecated\n      item: 'item',\n      group: 'group',\n      topItems: 'topItems',\n      itemHeight: 'itemHeight',\n      scrollingStateChange: 'scrollingStateChange',\n      maxHeightCacheSize: 'maxHeightCacheSize',\n      footer: 'footer',\n      header: 'header',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      GroupContainer: 'GroupContainer',\n      emptyComponent: 'emptyComponent',\n      HeaderContainer: 'HeaderContainer',\n      FooterContainer: 'FooterContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      adjustForPrependedItems: 'adjustForPrependedItems',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  ListRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { SizeFunction, SizeRange } from '../sizeSystem'\nimport useSize from './useSize'\n\nexport default function useChangedChildSizes(callback: (ranges: SizeRange[]) => void, itemSize: SizeFunction, enabled: boolean) {\n  return useSize((el: HTMLElement) => {\n    const ranges = getChangedChildSizes(el.children, itemSize, 'offsetHeight')\n    if (ranges !== null) {\n      callback(ranges)\n    }\n  }, enabled)\n}\n\nfunction getChangedChildSizes(children: HTMLCollection, itemSize: SizeFunction, field: 'offsetHeight' | 'offsetWidth') {\n  const length = children.length\n\n  if (length === 0) {\n    return null\n  }\n\n  const results: SizeRange[] = []\n\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i) as HTMLElement\n\n    if (!child || child.dataset.index === undefined) {\n      continue\n    }\n\n    const index = parseInt(child.dataset.index!)\n    const knownSize = parseInt(child.dataset.knownSize!)\n    const size = itemSize(child, field)\n\n    if (size === 0) {\n      throw new Error('Zero-sized element, this should not happen')\n    }\n\n    if (size === knownSize) {\n      continue\n    }\n\n    const lastResult = results[results.length - 1]\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size })\n    } else {\n      results[results.length - 1].endIndex++\n    }\n  }\n\n  return results\n}\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\n\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC } from 'react'\nimport { gridSystem } from './gridSystem'\nimport useSize from './hooks/useSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { GridComponents, GridComputeItemKey, GridItemContent, GridRootProps } from './interfaces'\nimport { addDeprecatedAlias, buildScroller, buildWindowScroller, identity, viewportStyle } from './List'\n\nconst gridComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<GridItemContent>((index) => `Item ${index}`)\n  const components = u.statefulStream<GridComponents>({})\n  const itemClassName = u.statefulStream('virtuoso-grid-item')\n  const listClassName = u.statefulStream('virtuoso-grid-list')\n  const computeItemKey = u.statefulStream<GridComputeItemKey>(identity)\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof GridComponents>(propName: K, defaultValue: GridComponents[K] | null | 'div' = null) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    scrollerRef,\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder', 'div'),\n  }\n})\n\nconst combinedSystem = u.system(([gridSystem, gridComponentPropsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(gridComponentPropsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    ItemContainer: u.stream<any>(),\n    ScrollContainer: u.stream<any>(),\n    ListContainer: u.stream<any>(),\n    emptyComponent: u.stream<any>(),\n    scrollSeek: u.stream<any>(),\n  }\n\n  function deprecateComponentProp(stream: u.Stream<any>, componentName: string, propName: string) {\n    u.connect(\n      u.pipe(\n        stream,\n        u.withLatestFrom(gridComponentPropsSystem.components),\n        u.map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      gridComponentPropsSystem.components\n    )\n  }\n\n  u.subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    u.publish(gridComponentPropsSystem.components, {\n      ...u.getValue(gridComponentPropsSystem.components),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ScrollSeekPlaceholder: placeholder,\n    })\n    u.publish(gridSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n\n  return { ...gridSystem, ...gridComponentPropsSystem, ...deprecatedProps }\n}, u.tup(gridSystem, gridComponentPropsSystem))\n\nconst GridItems: FC = React.memo(function GridItems() {\n  const gridState = useEmitterValue('gridState')\n  const listClassName = useEmitterValue('listClassName')\n  const itemClassName = useEmitterValue('itemClassName')\n  const itemContent = useEmitterValue('itemContent')\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder')!\n\n  const itemDimensions = usePublisher('itemDimensions')\n\n  const listRef = useSize((el) => {\n    const firstItem = el.firstChild as HTMLElement\n    if (firstItem) {\n      itemDimensions(firstItem.getBoundingClientRect())\n    }\n  })\n\n  return createElement(\n    ListComponent,\n    { ref: listRef, className: listClassName, style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom } },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index)\n      return isSeeking\n        ? createElement(ScrollSeekPlaceholder, { key, style: { height: gridState.itemHeight, width: gridState.itemWidth } })\n        : createElement(ItemComponent, { className: itemClassName, 'data-index': item.index, key }, itemContent(item.index))\n    })\n  )\n})\n\nconst Viewport: FC = ({ children }) => {\n  const viewportDimensions = usePublisher('viewportDimensions')\n\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect())\n  })\n\n  return (\n    <div style={viewportStyle} ref={viewportRef}>\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle}>\n      {children}\n    </div>\n  )\n}\n\nconst GridRoot: FC<GridRootProps> = React.memo(function GridRoot({ ...props }) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const TheScroller = useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = useWindowScroll ? WindowViewport : Viewport\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <GridItems />\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nconst { Component: Grid, usePublisher, useEmitterValue, useEmitter } = systemToComponent(\n  combinedSystem,\n  {\n    optional: {\n      totalCount: 'totalCount',\n      overscan: 'overscan',\n      itemContent: 'itemContent',\n      components: 'components',\n      computeItemKey: 'computeItemKey',\n      initialItemCount: 'initialItemCount',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      listClassName: 'listClassName',\n      itemClassName: 'itemClassName',\n      useWindowScroll: 'useWindowScroll',\n      scrollerRef: 'scrollerRef',\n\n      // deprecated\n      item: 'item',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      scrollToIndex: 'scrollToIndex',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n    },\n  },\n  GridRoot\n)\n\nexport type foo<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer Handle>> ? Handle : never\n\nexport type GridHandle = RefHandle<typeof Grid>\nexport { Grid }\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { ForwardRefExoticComponent, ReactElement, Ref } from 'react'\nimport { Grid, GridHandle } from './Grid'\n\nimport {\n  Components,\n  ComputeItemKey,\n  FollowOutput,\n  GroupContent,\n  GroupItemContent,\n  IndexLocationWithAlign,\n  ItemContent,\n  ListItem,\n  ListRange,\n  ScrollSeekConfiguration,\n} from './interfaces'\nimport { List, ListHandle } from './List'\ntype CompProps<T> = T extends ForwardRefExoticComponent<infer R> ? R : never\ntype ListProps = CompProps<typeof List>\ntype GridProps = CompProps<typeof Grid>\n\nexport interface VirtuosoProps<D> extends Omit<ListProps, 'groupCounts' | 'groupContent' | 'itemsRendered'> {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Increases the visual window which is used to calculate the rendered items with the specified **amount in pixels**.\n   * Effectively, this makes the component \"chunk\" the rendering of new items by renderng more items than the necessary, but reducing the re-renders on scroll.\n   * Setting { main: number, reverse: number } lets you extend the list in both the main and the reverse scrollable directions.\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * Set the amount of items to remain fixed at the top of the list.\n   *\n   * For a header that scrolls away when scrolling, check the `components.Header` property.\n   */\n  topItemCount?: number\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   */\n  initialTopMostItemIndex?: number\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: Components\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Set to customize the wrapper tag for the header and footer components (default is `div`).\n   */\n  headerFooterTag?: string\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n}\n\nexport interface GroupedVirtuosoProps<D>\n  extends Omit<VirtuosoProps<D>, 'totalCount' | 'itemContent'>,\n    Pick<ListProps, 'groupCounts' | 'groupContent'> {\n  /**\n   * Specifies the amount of items in each group (and, actually, how many groups are there).\n   * For example, passing [20, 30] will display 2 groups with 20 and 30 items each.\n   */\n  groupCounts?: number[]\n\n  /**\n   * Specifies how each each group header gets rendered. The callback receives the zero-based index of the group.\n   */\n  groupContent?: GroupContent\n\n  /**\n   * Specifies how each each item gets rendered.\n   */\n  itemContent?: GroupItemContent<D>\n}\n\nexport interface VirtuosoGridProps extends GridProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount: GridProps['totalCount']\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: GridProps['itemContent']\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: GridProps['components']\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting { main: number, reverse: number } lets you extend the list in both the main and the reverse scrollable directions.\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: GridProps['computeItemKey']\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | null) => any\n\n  /**\n   * Sets the className for the list DOM element\n   */\n  listClassName?: string\n\n  /**\n   * Sets the grid items' className\n   */\n  itemClassName?: string\n\n  /**\n   * Uses the document scroller rather than wrapping the grid in its own.\n   */\n  useWindowScroll?: boolean\n}\n\nexport interface VirtuosoHandle extends ListHandle {\n  /**\n   * Scrolls the component to the specified item index. See {{IndexLocationWithAlign}} for more options.\n   */\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  /**\n   * Scrolls the component to the specified location. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollTo(location: ScrollToOptions): void\n  /**\n   * Scrolls the component with the specified amount. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface GroupedVirtuosoHandle extends ListHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface VirtuosoGridHandle extends GridHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport const Virtuoso = List as <D extends unknown = any>(props: VirtuosoProps<D> & { ref?: Ref<VirtuosoHandle> }) => ReactElement\nexport const GroupedVirtuoso = List as <D extends unknown = any>(\n  props: GroupedVirtuosoProps<D> & { ref?: Ref<GroupedVirtuosoHandle> }\n) => ReactElement\nexport const VirtuosoGrid: ForwardRefExoticComponent<VirtuosoGridProps> = Grid\n"],"names":["tupleComparator","prev","current","rangeComparator","next","startIndex","endIndex","UP","domIOSystem","u","scrollTop","deviation","smoothScrollTargetReached","statefulScrollTop","viewportHeight","headerHeight","footerHeight","scrollTo","scrollBy","scrollingInProgress","scrollDirection","acc","direction","prevScrollTop","value","singleton","propsReadySystem","propsReady","didMount","ready","INITIAL_BOTTOM_STATE","atBottom","notAtBottomBecause","state","offsetBottom","totalHeight","stateFlagsSystem","isAtBottom","isAtTop","atBottomStateChange","atTopStateChange","listStateListener","isScrolling","top","atBottomState","bottom","setTimeout","scrollSeekSystem","system","scrollVelocity","statefulStream","isSeeking","rangeChanged","stream","scrollSeekConfiguration","connect","pipe","filter","mapTo","throttleTime","withLatestFrom","scan","map","speed","config","range","enter","exit","distinctUntilChanged","subscribe","combineLatest","change","scrollSeekRangeChanged","tup","NIL_NODE","lvl","newAANode","k","v","l","r","empty","node","newTree","remove","key","last","adjust","clone","deleteLast","findMaxKeyValue","field","Infinity","undefined","insert","split","skew","rebalance","walkWithin","start","end","result","concat","push","walk","args","isSingle","Error","rl","rlvl","rangesWithin","arrayToRanges","index","items","parser","length","i","nextIndex","nextValue","findIndexOfClosestSmallerOrEqual","comparator","Math","floor","match","join","findClosestSmallerOrEqual","correctItemSize","el","dimension","getBoundingClientRect","rangeIncludes","refRange","size","indexComparator","itemIndex","offsetComparator","offset","itemOffset","offsetPointParser","point","sizeStateReducer","ranges","groupIndices","sizeTree","offsetTree","newSizeTree","syncStart","groupSize","itemSize","reduce","tree","groupIndex","min","overlappingRanges","some","firstPassDone","shouldInsert","rangeStart","rangeEnd","rangeValue","insertRanges","prevIndex","prevSize","prevAOffset","startAIndex","arrayBinarySearch","kv","slice","aOffset","groupOffsetTree","offsetOf","lastIndex","lastOffset","lastSize","originalIndexFromItemIndex","sizes","hasGroups","groupOffset","SIZE_MAP","offsetHeight","offsetWidth","sizeSystem","sizeRanges","totalCount","unshiftWith","firstItemIndex","fixedItemSize","defaultItemSize","data","initial","indexes","idx","trackItemSizes","listRefresh","newSizes","changed","diff","val","beforeUnshiftWith","SUPPORTS_SCROLL_TO_OPTIONS","document","documentElement","style","normalizeIndexLocation","location","align","behavior","scrollToIndexSystem","scrollToIndex","topListHeight","unsubscribeNextListRefresh","cleartTimeoutRef","unsubscribeListRefresh","cleanup","clearTimeout","normalLocation","max","round","currentValue","timeout","retry","listChanged","done","getOverscan","overscan","main","reverse","sizeRangeSystem","listBoundary","visibleRange","listTop","listBottom","headerVisible","windowScrollerSystem","windowViewportRect","windowScrollTop","windowScrollTo","useWindowScroll","offsetTop","INITIAL_GRID_STATE","itemHeight","itemWidth","PROBE_GRID_STATE","ceil","hackFloor","buildItems","Array","from","_","gridSystem","stateFlags","scrollSeek","initialItemCount","gridState","viewportDimensions","height","width","itemDimensions","startOffset","endOffset","item","viewport","viewportWidth","perRow","gridLayout","endReached","startReached","itemTop","totalListHeight","viewportInfo","visibleWidth","visibleHeight","useSizeWithElRef","callback","enabled","ref","useRef","observer","ResizeObserver","entries","element","target","offsetParent","callbackRef","elRef","observe","unobserve","useSize","useWindowViewportRectRef","calculateInfo","useCallback","rect","window","innerHeight","pageYOffset","windowEH","useEffect","addEventListener","removeEventListener","useIsomorphicLayoutEffect","useLayoutEffect","useScrollTop","scrollTopCallback","scrollerElement","scrollerRefCallback","scrollerRef","scrollTopTarget","timeoutRef","handler","ev","scrollHeight","localRef","passive","scrollByCallback","scrollToCallback","isSmooth","initialTopMostItemIndexSystem","scrolledToInitialItem","initialTopMostItemIndex","normalizeFollowOutput","follow","followOutputSystem","followOutput","pendingScrollHandle","scrollToBottom","followOutputBehavior","shouldFollow","behaviorFromFollowOutput","refreshed","cancel","groupCountsToIndicesAndCount","counts","groupCount","groupedListSystem","groupCounts","topItemsIndexes","groupIndicesAndCount","streamFromEmitter","prop","EMPTY_LIST_STATE","topItems","transposeItems","originalIndex","transposedItems","groupRanges","currentRange","currentGroupIndex","shift","indexOf","type","buildListState","lastItem","func","called","listStateSystem","rangeTopListHeight","itemsRendered","listState","sizesValue","probeItemSet","rangeStartIndex","rangeEndIndex","minStartIndex","offsetPointRanges","endValue","rangesWithinOffsets","maxIndex","initialItemCountSystem","count","includedGroupsCount","adjustedCount","topItemCountSystem","topItemCount","totalListHeightSystem","totalListHeightChanged","upwardScrollFixSystem","deviationOffset","prevItems","newDev","prevFirstItemIndex","prevItem","find","pItem","initialScrollTopSystem","initialScrollTop","alignToBottomSystem","alignToBottom","paddingTopAddition","featureGroup1System","listSystem","domIO","flags","featureGroup1","fixedItemHeight","defaultItemHeight","positionStickyCssValue","createElement","position","identity","listComponentPropsSystem","itemContent","groupContent","components","computeItemKey","headerFooterTag","noop","distinctProp","propName","defaultValue","statefulStreamFromEmitter","FooterComponent","HeaderComponent","TopItemListComponent","ListComponent","ItemComponent","GroupComponent","ScrollerComponent","EmptyPlaceholder","ScrollSeekPlaceholder","addDeprecatedAlias","message","alias","console","warn","combinedSystem","propsSystem","deprecatedProps","group","scrollingStateChange","adjustForPrependedItems","maxHeightCacheSize","footer","header","HeaderContainer","FooterContainer","ItemContainer","ScrollContainer","GroupContainer","ListContainer","emptyComponent","deprecateComponentProp","componentName","comp","placeholder","publish","getValue","DefaultScrollSeekPlaceholder","React","GROUP_STYLE","zIndex","Items","showTopList","useEmitterValue","usePublisher","children","results","child","dataset","parseInt","knownSize","lastResult","getChangedChildSizes","containerStyle","boxSizing","paddingTop","paddingBottom","marginTop","data-index","data-known-size","data-item-index","data-item-group-index","scrollerStyle","outline","overflowY","WebkitOverflowScrolling","viewportStyle","topItemListStyle","Header","Footer","buildScroller","useEmitter","props","tabIndex","buildWindowScroller","Viewport","viewportRef","compose","WindowViewport","TopItemListContainer","TopItemList","ListRoot","TheViewport","WindowScroller","Scroller","systemToComponent","required","optional","methods","events","List","Component","gridComponentPropsSystem","itemClassName","listClassName","GridItems","listRef","firstItem","firstChild","className","GridRoot","Grid","Virtuoso","VirtuosoGrid"],"mappings":"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"}